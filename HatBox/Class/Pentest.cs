using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Diagnostics;
using System.Windows;
using System.Text.RegularExpressions;
using System.Collections.ObjectModel;
using System.Data;

namespace HatBox.Class
{
    class Pentest
    {
        #region " Properties "

        private string _url;
        private string _error;
        private string _serverType;
        private string _dbType;

        private Visibility _loaderVisible;
        private short _loaderValue;
        private bool _loaderUnknown;

        private string _logValue;

        #endregion

        public string Url
        {
            get
            {
                return _url;
            }
            set
            {
                _url = value;
            }
        }
        public bool IsValidUrl
        {
            get
            {
                return Uri.IsWellFormedUriString(Url, UriKind.Absolute);
            }
        }
        public string Host
        {
            get
            {
                if (IsValidUrl)
                {
                    return new Uri(Url).Host;
                }

                return string.Empty;
            }
        }
        public string Error
        {
            get
            {
                return _error;
            }
            set
            {
                _error = value;
            }
        }
        public string ServerType
        {
            get
            {
                return _serverType;
            }
            set
            {
                _serverType = value;
            }
        }
        public string DbType
        {
            get
            {
                return _dbType;
            }
            set
            {
                _dbType = value;
            }
        }

        public DataTable Results { get; set; }
        public string Query { get; set; }

        public Visibility LoaderVisible
        {
            get
            {
                return _loaderVisible;
            }
            set
            {
                _loaderVisible = value;
            }
        }
        public short LoaderValue
        {
            get
            {
                return _loaderValue;
            }
            set
            {
                _loaderValue = value;
            }
        }
        public bool LoaderUnknown
        {
            get
            {
                return _loaderUnknown;
            }
            set
            {
                _loaderUnknown = value;
            }
        }

        public string LogValue
        {
            get
            {
                return _logValue;
            }
            set
            {
                _logValue = value;
            }
        }

        public Process Process { get; set; }

        public bool IsEnabled { get; set; }
        public ObservableCollection<Database> Databases { get; set; }

        public Pentest()
        {
            IsEnabled = true;
            Url = "http://localhost:8080/testmysql.php?id=1";

            Process = null;
            LoaderVisible = Visibility.Hidden;

            Results = new DataTable();
            Databases = new ObservableCollection<Database>();
        }

        public string GetLastLog()
        {
            string logPath = System.IO.Path.GetFullPath("Ressources/output/" + Host + "/log");

            if (System.IO.File.Exists(logPath))
            {
                string content = System.IO.File.ReadAllText(logPath);
                int i = content.LastIndexOf("\n---\n");
                return content.Substring(i);
            }

            return string.Empty;
        }
    }
}
